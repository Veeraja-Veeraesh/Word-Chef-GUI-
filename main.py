# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitledproj.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import anagramCheck as chk
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(673, 524)
        font = QtGui.QFont()
        font.setPointSize(15)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.labelQstn = QtWidgets.QLabel(self.centralwidget)
        self.labelQstn.setGeometry(QtCore.QRect(50, 210, 261, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.labelQstn.setFont(font)
        self.labelQstn.setScaledContents(True)
        self.labelQstn.setWordWrap(False)
        self.labelQstn.setObjectName("labelQstn")
        self.label_lives = QtWidgets.QLabel(self.centralwidget)
        self.label_lives.setGeometry(QtCore.QRect(10, 20, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_lives.setFont(font)
        self.label_lives.setObjectName("label_lives")
        self.label_wordsguessed = QtWidgets.QLabel(self.centralwidget)
        self.label_wordsguessed.setGeometry(QtCore.QRect(10, 80, 231, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_wordsguessed.setFont(font)
        self.label_wordsguessed.setObjectName("label_wordsguessed")
        self.label_wordstoguess = QtWidgets.QLabel(self.centralwidget)
        self.label_wordstoguess.setGeometry(QtCore.QRect(10, 150, 251, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_wordstoguess.setFont(font)
        self.label_wordstoguess.setObjectName("label_wordstoguess")
        self.label_display_Qstn = QtWidgets.QLabel(self.centralwidget)
        self.label_display_Qstn.setGeometry(QtCore.QRect(350, 210, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_display_Qstn.setFont(font)
        self.label_display_Qstn.setObjectName("label_display_Qstn")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(45, 280, 591, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.quitButton = QtWidgets.QPushButton(self.centralwidget)
        self.quitButton.setGeometry(QtCore.QRect(160, 380, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.quitButton.setFont(font)
        self.quitButton.setObjectName("quitButton")
        self.submitButton = QtWidgets.QPushButton(self.centralwidget)
        self.submitButton.setGeometry(QtCore.QRect(350, 380, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.submitButton.setFont(font)
        self.submitButton.setObjectName("submitButton")
        self.label_display_lives = QtWidgets.QLabel(self.centralwidget)
        self.label_display_lives.setGeometry(QtCore.QRect(110, 20, 151, 31))
        self.label_display_lives.setObjectName("label_display_lives")
        self.label_display_wordsguessed = QtWidgets.QLabel(self.centralwidget)
        self.label_display_wordsguessed.setGeometry(QtCore.QRect(240, 90, 141, 31))
        self.label_display_wordsguessed.setObjectName("label_display_wordsguessed")
        self.label_display_wordstoguess = QtWidgets.QLabel(self.centralwidget)
        self.label_display_wordstoguess.setGeometry(QtCore.QRect(250, 150, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_display_wordstoguess.setFont(font)
        self.label_display_wordstoguess.setObjectName("label_display_wordstoguess")
        self.label_status = QtWidgets.QLabel(self.centralwidget)
        self.label_status.setGeometry(QtCore.QRect(340, 20, 310, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_status.setFont(font)
        self.label_status.setObjectName("label_status")
        self.nextButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextButton.setGeometry(QtCore.QRect(350, 380, 141, 51))#510, 380, 141, 51
        font = QtGui.QFont()
        font.setPointSize(14)
        self.nextButton.setFont(font)
        self.nextButton.setObjectName("nextButton")

        self.solnButton = QtWidgets.QPushButton(self.centralwidget)
        self.solnButton.setGeometry(QtCore.QRect(510, 380, 141, 51))  # 510, 380, 141, 51
        font = QtGui.QFont()
        font.setPointSize(14)
        self.solnButton.setFont(font)
        self.solnButton.setObjectName("solnButton")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 673, 41))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        #functions are called when buttons are clicked
        self.quitButton.clicked.connect(self.quitbtn_click)
        self.nextButton.clicked.connect(self.initiate)
        self.submitButton.clicked.connect(self.game_board)
        self.solnButton.clicked.connect(self.solnbtn_click)
        
        self.submitButton.hide()
        self.solnButton.hide()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Word Chef"))
        self.labelQstn.setText(_translate("MainWindow", "Your Letters :"))
        self.label_lives.setText(_translate("MainWindow", "LIVES :"))
        self.label_wordsguessed.setText(_translate("MainWindow", "WORDS GUESSED :"))
        self.label_wordstoguess.setText(_translate("MainWindow", "WORDS TO GUESS :"))
        self.label_display_Qstn.setText(_translate("MainWindow", ""))
        self.quitButton.setText(_translate("MainWindow", "QUIT"))
        self.submitButton.setText(_translate("MainWindow", "SUBMIT"))
        self.label_display_lives.setText(_translate("MainWindow", ""))
        self.label_display_wordsguessed.setText(_translate("MainWindow", ""))
        self.label_display_wordstoguess.setText(_translate("MainWindow", ""))
        self.label_status.setText(_translate("MainWindow", "Click on NEXT"))
        self.nextButton.setText(_translate("MainWindow", "NEXT"))
        self.solnButton.setText(_translate("MainWindow", "SOLUTION"))

    global qstn
    qstn = ""
    global soln
    soln = ""
    global lives
    lives=5
    global wordsguessed
    wordsguessed=0
    global wordstoguess
    wordstoguess=0
    global maxwordstoguess_local
    maxwordstoguess_local=0
    global userinput
    userinput=[]
    global levelNo
    levelNo=0

    def initiate(self):
        global qstn
        qstn = ""
        global soln
        soln = ""
        global lives
        lives = 5
        global wordsguessed
        wordsguessed = 0
        global wordstoguess
        wordstoguess = 0
        global maxwordstoguess_local
        maxwordstoguess_local = 0
        global userinput
        userinput = []
        global levelNo
        levelNo+=1

        #to limit letters
        if levelNo>5:
            levelNo=4

        #to get tuple containing question & solution
        tup = chk.anagramCheck(levelNo)
        #qstn
        rndltrs=' '.join(tup[0])
        self.label_display_Qstn.setText(rndltrs)
        #soln
        soln=tup[1]

        #to set minimum words to qualify
        if len(soln) <= 10:
            maxwordstoguess_local = int(0.6 * len(soln))
        else:
            maxwordstoguess_local = 5

        #set the initial txt in labels
        self.label_status.setText("")
        self.label_display_lives.setText(str(lives))
        self.label_display_wordsguessed.setText(str(wordsguessed))
        self.label_display_wordstoguess.setText(str(maxwordstoguess_local - wordsguessed))
        
        self.nextButton.hide()
        self.submitButton.show()
        self.solnButton.show()


    def game_board(self):
        global soln
        global lives
        global wordsguessed
        global maxwordstoguess_local
        global userinput

        solutions_local=soln
        userinput_local=userinput
        maxwordstoguess_local=maxwordstoguess_local

        #assigning max words to guess to variable
        if len(solutions_local) <= 10:
            maxwordstoguess_local = int(0.6 * len(solutions_local))
        else:
            maxwordstoguess_local = 5


        self.label_display_lives.setText(str(lives))
        input=self.textEdit.toPlainText().upper()


        #to make sure input is only a word
        if ' ' in input or '\n' in input:
            self.label_status.setText("Please enter a single word.")

        else:
            #to check if input is a solution to the question
            if input not in solutions_local:
                lives-=1
                self.label_display_lives.setText(str(lives))
                self.label_status.setText('WRONG WORD!')
                if lives== 0:
                    self.label_status.setText("YOU HAVE LOST! ")
                    self.nextButton.hide()
                    self.submitButton.hide()
                    self.label_display_lives.setText("0")
            #if input is the correct answer
            else:
                userinput.append(input)
                #if answer is repeated
                if userinput_local.count(input) > 1:
                    lives -= 1
                    self.label_display_lives.setText(str(lives))
                    self.label_status.setText("YOU GUESSED THE SAME WORD!!!")
                    if lives == 0:
                        self.label_status.setText("YOU HAVE LOST! ")
                        self.nextButton.hide()
                        self.submitButton.hide()
                        self.label_display_lives.setText("0")
                #if it is original
                else:
                    wordsguessed+=1
                    self.label_status.setText("Correct Word!!!")
                    self.textEdit.setText('')
                    self.label_display_wordstoguess.setText(str(maxwordstoguess_local - wordsguessed))
                    self.label_display_wordsguessed.setText(str(wordsguessed))

            #if requirement ofmin no of words to qualify is satisfied then
            if len(set(userinput_local)) == maxwordstoguess_local:
                self.label_status.setText("YOU HAVE WON! CLICK ON 'NEXT' TO PROCEED TO NEXT LEVEL ")
                self.submitButton.hide()
                self.solnButton.hide()
                self.nextButton.show()




    def quitbtn_click(self):
        msg = QMessageBox()
        msg.setWindowTitle("Quit")
        msg.setText("To Quit, click on the 'X' icon in the main application window. Click on OK if you understood.")
        msg.setIcon(QMessageBox.Information)

        z=msg.exec_()




    def solnbtn_click(self):
        global soln
        solution=' '.join(soln)
        msg2=QMessageBox()
        msg2.setWindowTitle("Solution")
        msg2.setText("Click on 'show details' to view the solution.")
        msg2.setDetailedText(solution)

        y=msg2.exec_()





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
